#pip install os-sys
import os
import csv
import re
import streamlit as st
from pycaret.classification import setup, compare_models, pull, save_model
import numpy as np
import pandas as pd
import pandas_profiling
from streamlit_pandas_profiling import st_profile_report
import io
## –ù–∞—á–∞–ª–æ –æ–±–ª–∞—Å—Ç–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Å—Ç–∏–ª–µ–π
from streamlit.web import cli as stcli

st.set_page_config(layout="wide", page_title="ML", page_icon="üßä")

def load_css(file_path):
    with open(file_path) as f:
        st.markdown(f'<style>{f.read()}</style>', unsafe_allow_html=True)
css_file = 'style.css'
load_css(css_file)
## –ö–æ–Ω–µ—Ü –æ–±–ª–∞—Å—Ç–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Å—Ç–∏–ª–µ–π

with st.sidebar:
    st.title("ML")
    choice = st.radio("–ù–∞–≤–∏–≥–∞—Ü–∏—è", ["–ó–∞–≥—Ä—É–∑–∫–∞", "–ê–Ω–∞–ª–∏–∑", "–ú–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏—è", "–°–∫–∞—á–∞—Ç—å"])
    st.info("–≠—Ç–æ –ø—Ä–æ–µ–∫—Ç–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è")


if os.path.exists('./dataset.csv'):
    df = pd.read_csv('dataset.csv', index_col=None)

if choice == "–ó–∞–≥—Ä—É–∑–∫–∞":
    st.title("–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö")
    file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Å–≤–æ–π –Ω–∞–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö", type=["csv", "xlsx"])
    if file is not None:
        try:
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Ñ–∞–π–ª–∞ –∏ –∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º –æ–±—Ä–∞–∑–æ–º
            if file.name.endswith('.csv'):
                df = pd.read_csv(file, sep=',', index_col=None)
            elif file.name.endswith('.xlsx'):
                df = pd.read_excel(file, index_col=None)
            df.to_csv('dataset.csv', index=None)  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ CSV –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
            st.dataframe(df)
        except pd.errors.EmptyDataError:
            st.error("–§–∞–π–ª –ø—É—Å—Ç–æ–π")
        except Exception as e:
            st.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
            
import pandas_profiling
#pip install pandas_profiling
from streamlit_pandas_profiling import st_profile_report
# pip install https://github.com/pandas-profiling/pandas-profiling/archive/master.zip
if choice == "–ê–Ω–∞–ª–∏–∑":
    st.title("–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö")
    profile_df = df.profile_report()
    st_profile_report(profile_df)
    
if choice == "–ú–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏—è":
    chosen_targets = st.multiselect('–í—ã–±–µ—Ä–∏—Ç–µ —Ü–µ–ª–µ–≤—ã–µ —Å—Ç–æ–ª–±—Ü—ã', df.columns)
    if st.button('–ó–∞–ø—É—Å—Ç–∏—Ç—å –æ–±—É—á–µ–Ω–∏–µ'): 
        for target in chosen_targets:
            st.subheader(f"–ú–æ–¥–µ–ª—å –¥–ª—è —Ü–µ–ª–µ–≤–æ–≥–æ —Å—Ç–æ–ª–±—Ü–∞: {target}")
            df_target = df.dropna(subset=[target])
            setup(df_target, target=target, verbose=False)
            setup_df = pull()
            st.info("–≠—Ç–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞ ML")
            st.dataframe(setup_df.dropna())
            best_model = compare_models()
            compare_df = pull()
            st.info("–≠—Ç–æ –º–æ–¥–µ–ª—å ML")
            st.dataframe(compare_df.dropna())
            best_model
            save_model(best_model, f'best_model_{target}')
    
file_path = 'best_model.pkl'

if choice == "–°–∫–∞—á–∞—Ç—å":
    st.title("–í–∞—à–∞ –æ–±—É—á–µ–Ω–Ω–∞—è –º–æ–¥–µ–ª—å —Å–∫–∞—á–∞–ª–∞—Å—å –≤ –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞")
    with open(file_path, 'rb') as file:
        st.download_button('–°–∫–∞—á–∞—Ç—å –º–æ–¥–µ–ª—å', file, file_name="best_model.pkl")